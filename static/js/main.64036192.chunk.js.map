{"version":3,"sources":["components/NavItem/NavItem.tsx","components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","components/WrongPage/WrongPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage.tsx","components/App/App.tsx","index.tsx"],"names":["NavItem","props","path","text","className","isActive","cn","to","NavBar","role","HomePage","WrongPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","selectedSlug","useParams","slug","classNames","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","hasLoadingError","setHasLoadingError","isLoading","setIsLoading","getPeopleFromServer","useCallback","peopleFromServer","getParent","parentName","find","useEffect","length","App","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.64036192.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  path: string;\n  text: string;\n}\n\nexport const NavItem: FC<Props> = (props) => {\n  const { path, text } = props;\n\n  return (\n    <NavLink\n      className={({ isActive }) => cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n      to={path}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { NavItem } from '../NavItem/NavItem';\n\nexport const NavBar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavItem path=\"/\" text=\"Home\" />\n        <NavItem path=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">HomePage</h1>\n);\n","export const WrongPage = () => (\n  <h1 className=\"title\">This page is wrong</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person } = props;\n  const { slug: selectedSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedSlug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={`/people/${person.mother.slug}`}\n            >\n              {person.motherName}\n            </Link>\n          )\n          : (\n            <>\n              {person.motherName || '-'}\n            </>\n          )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <Link\n              className=\"has-text-blue\"\n              to={`/people/${person.father.slug}`}\n            >\n              {person.fatherName}\n            </Link>\n          )\n          : (\n            <>\n              {person.fatherName || '-'}\n            </>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const { people } = props;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            person={person}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = useCallback(async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const getParent = (parentName: string | null) => peopleFromServer.find(\n        person => person.name === parentName,\n      );\n\n      setPeople(peopleFromServer.map(person => ({\n        ...person,\n        mother: getParent(person.motherName),\n        father: getParent(person.fatherName),\n      })));\n      setIsLoading(true);\n    } catch {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <PeopleTable people={people} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from '../NavBar/NavBar';\nimport { HomePage } from '../HomePage/HomePage';\nimport { WrongPage } from '../WrongPage/WrongPage';\nimport { PeoplePage } from '../PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<WrongPage />}\n          />\n\n          <Route\n            path=\"people/:slug\"\n            element={<PeoplePage />}\n          />\n\n          <Route\n            path=\"people\"\n            element={<PeoplePage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './components/App/App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}